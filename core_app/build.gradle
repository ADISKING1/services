/**************************************************************************************************
                                        GRADLE CONFIG
 *************************************************************************************************/

if ((new File(gradle.local)).exists()) { // TODO: This is very strange
    def localPath = '../' + gradle.local // Shouldn't need to append ../ not consistent
    apply from: localPath
} else {
    apply from: gradle.remote
}

applicationScripts.each {
    apply from: it
}

apply plugin: 'com.android.application'

android {
    // The following are set in the common.gradle file
    compileSdkVersion(compileVersion)
    buildToolsVersion(buildTools)

    defaultConfig {
        applicationId(groupId + coreName)
        minSdkVersion(minVersion)
        targetSdkVersion(targetVersion)
        versionCode(releaseVersionCode)
        versionName(versionCodeName)
    }

    buildTypes {
        release {
            minifyEnabled(minify)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        snapshot {
            // Build type for snapshots
        }
        debug {
            testCoverageEnabled(testCoverage) // Allows AndroidTest JaCoCo reports to be generated
        }
    }

    packagingOptions { // Pick first occurrence of any files that cause conflicts, as defined in common.gradle
        packageList.each {
            pickFirst it
        }
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')

    if (libraryProjectPath.exists() && gradle.useLocal) { // Local project is favoured
        compile project(libraryProjectName)
    } else {
        releaseCompile(group: groupId, name: libraryArtifactName, version: libraryRelease, ext: 'aar')
        snapshotCompile(group: groupId, name: libraryArtifactName, version: librarySnapshot, ext: 'aar')
        debugCompile(group: groupId, name: libraryArtifactName, version: librarySnapshot, ext: 'aar')
    }

    // Testing-only dependencies
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
    androidTestCompile 'com.android.support:support-annotations:22.2.0'
    androidTestCompile 'com.android.support:support-v13:22.2.0'
    androidTestCompile 'junit:junit:4.12'
    testCompile 'junit:junit:4.12'
}